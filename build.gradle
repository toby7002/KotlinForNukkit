plugins {
    id "java"
    id "idea"
    id "com.diffplug.spotless" version "6.13.0"
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = kotlin_version
group = maven_group

repositories {
    maven {
        url = "https://repo.opencollab.dev/maven-snapshots"
    }
    maven {
        url = "https://repo.opencollab.dev/maven-releases"
    }
    mavenCentral()
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:${coroutines_version}")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-core:${serialization_version}")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:${serialization_version}")

    compileOnly("cn.nukkit:nukkit:1.0-SNAPSHOT")
}

base {
    archivesName = archives_base_name
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 8
}

jar.enabled = false
assemble.dependsOn shadowJar

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

shadowJar {
    archiveBaseName.set(project.archives_base_name)
    archiveClassifier.set('')
    archiveVersion.set(getVersion())

    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

idea {
    project {
        languageLevel = "1.8"
    }
}

spotless {
    java {
        target "src/*/java/**/*.java"

        endWithNewline()
        indentWithTabs()
        removeUnusedImports()
        palantirJavaFormat()
    }
}
